;recursion
(define (pascal row col)
    (cond ((> col row) 0)
	  ((< col 0) 0)		  
	  ((= col 1) 1)
	  ((+ (pascal (- row 1) (- col 1))
	      (pascal (- row 1) col)))))

;iteration
;(row col) = (col! / (row!(row-col)!))
(define (pascal row col)
	(/ (factorial row)
	   (* (factorial col) (factorial (- row col)))))
